version: "3"

services:
  postgres:
    image: postgres:latest
    command: -c 'max_connections=200'
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - "5432:5432"
    networks:
      - ECACluster

  kafka:
    image: docker.io/bitnami/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CONTROLLER://:9094,INSIDE://:9093,OUTSIDE://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://192.168.0.193:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - ECACluster

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - "qdrant_data:/qdrant/storage"
      - "./qdrant_config.yaml:/qdrant/config/production.yaml"
    networks:
      - ECACluster

volumes:
  kafka_data:
    driver: local
  qdrant_data:
    driver: local

networks:
  ECACluster: